{"version":3,"sources":["BooksAPI.js","components/Book.js","components/BookShelf.js","components/ListBooks.js","components/Search.js","components/BookDetails.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","id","method","body","JSON","stringify","then","res","json","search","query","maxResults","data","books","Book","updateBook","thumbnail","shelfTitle","imageLinks","className","style","width","height","backgroundImage","onChange","e","target","value","defaultValue","disabled","shelfName","shelfDisplayName","map","index","title","authors","BookShelf","to","state","ListBooks","Search","setBooks","useState","setQuery","booksArr","getBooks","updateSearch","BooksAPI","Array","isArray","forEach","bk","filter","undefined","catch","err","console","log","type","placeholder","event","length","BookDetails","useLocation","author","category","categories","description","pageCount","publisher","publishedDate","App","navigate","useNavigate","useEffect","b","exact","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e882b607.chunk.js","sourcesContent":["const api = \"https://reactnd-books-api.udacity.com\";\n\nlet token = localStorage.token;\n\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n  Accept: \"application/json\",\n  Authorization: token,\n};\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.book);\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.books);\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ shelf }),\n  }).then((res) => res.json());\n\nexport const search = (query, maxResults) =>\n  fetch(`${api}/search`, {\n    method: \"POST\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ query, maxResults }),\n  })\n    .then((res) => res.json())\n    .then((data) => data.books);\n","import React from 'react'\nimport PropTypes from 'prop-types';\n\nconst Book = ({ book, updateBook, shelfTitle }) => {\n  const thumbnail = book.imageLinks ? book.imageLinks.thumbnail : \"\";\n\n  const handleChange = (e) => {\n    updateBook(book, e.target.value)\n  }\n\n  const shelves = [\n    {id: \"1\", shelfName: \"currentlyReading\", shelfDisplayName: \"Currently Reading\"},\n    {id: \"2\", shelfName: \"wantToRead\", shelfDisplayName: \"Want to Read\"},\n    {id: \"3\", shelfName: \"read\", shelfDisplayName: \"Read\"},\n    {id: \"4\", shelfName: \"none\", shelfDisplayName: \"none\"}\n  ]\n\n  return (\n    <div className=\"book\">\n      <div className=\"book-top\">\n        <div\n          className=\"book-cover\"\n          style={{\n            width: 128,\n            height: 193,\n            backgroundImage: `url(${thumbnail})`,\n          }}\n        ></div>\n        <div className=\"book-shelf-changer\">\n          <select\n            onChange={handleChange}\n            defaultValue={book.shelf}\n          >\n            <option value=\"move\" disabled>Move to...</option>\n            {shelves.map((shelf, index) => {\n              return(\n              <option key={index} value={shelf.shelfName}>\n                {shelf.shelfDisplayName}\n              </option>)\n            })}\n          </select>\n        </div>\n      </div>\n      <div className=\"book-title\">{book.title}</div>\n      <div className=\"book-authors\">{book.authors}</div>\n    </div>\n  )\n}\n\nBook.propTypes = {\n  book: PropTypes.object.isRequired,\n  updateBook: PropTypes.func\n};\n\n\nexport default Book","import React from 'react'\nimport Book from './Book'\nimport { Link } from 'react-router-dom'\n\nexport const BookShelf = ({ books, updateBook, shelfTitle, title }) => {\n  \n  return (\n    <div>\n      <div className=\"bookshelf\">\n        <h1 className=\"bookshelf-title\">{title}</h1>\n        <div className=\"bookshelf-books\">\n          <ol className=\"books-grid\">\n            {books.map((book) => {\n              return book.shelf === shelfTitle &&\n              <li key={book.id}>\n                <Book book={book} updateBook={updateBook} shelfTitle={shelfTitle} />\n                <Link className='details-link' to={`/details/${book.id}/${book.title}`} state={{ data: book }}>Book Details</Link>\n              </li>\n            })}\n          </ol>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { BookShelf } from './BookShelf';\n\nconst ListBooks = ({ books, updateBook }) => {\n\n  return (\n  <div className=\"list-books\">\n    <div className=\"list-books-title\">\n      <h1>MyReads</h1>\n    </div>\n    <div className=\"list-books-content\">\n      <BookShelf \n        books={books}\n        title=\"Currently Reading\"\n        shelfTitle =\"currentlyReading\"\n        updateBook={updateBook}\n      />\n      <BookShelf\n        books={books} \n        title=\"Read\"\n        shelfTitle=\"read\"\n        updateBook={updateBook}\n      />\n      <BookShelf \n        books={books} \n        title=\"Want to Read\"\n        shelfTitle=\"wantToRead\"\n        updateBook={updateBook}\n      />\n    </div>\n    <Link to=\"/search\" className='open-search'>\n      Link\n    </Link>\n  </div>\n  )\n}\n\nexport default ListBooks","import React from 'react'\nimport { useState } from 'react';\nimport * as BooksAPI from \"../BooksAPI\";\nimport Book from './Book';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst Search = ({ books, updateBook, setBooks }) => {\n  const [query, setQuery] = useState(\"\");\n  const [booksArr, getBooks] = useState([]);\n\n  const updateSearch = async (query) => {\n    setQuery(query);\n    if(query !== '') {\n      const res = await BooksAPI.search(query, 5)\n      .then((res) => {\n        if (Array.isArray(res)) {\n          res.forEach((book) => {\n            books.forEach((bk) => {\n              if (book.id === bk.id) {\n                  book.shelf = bk.shelf;\n              } if (!book.shelf) {\n                book.shelf = \"none\";\n              }\n            });\n          });\n          getBooks(\n            res.filter(\n              (book) => book.authors !== undefined && book.imageLinks !== undefined\n            )\n          );\n        } else {\n          getBooks([])\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n    }\n  }\n\n  return (\n    <div className=\"search-books\">\n      <div className=\"search-books-bar\">\n      <Link to=\"/\" className=\"close-search\"></Link>\n        <div className=\"search-books-input-wrapper\">\n          <input className=\"search-input\"\n            type=\"text\"\n            placeholder=\"Search by title, author, or ISBN\"\n            value={query}\n            onChange={(event) => updateSearch(event.target.value)}\n          />\n        </div>\n      </div>\n      <div className=\"search-books-results\">\n        <ol className=\"books-grid\">\n          { booksArr.length ? (booksArr.map((book) => {\n            return (\n            <li key={book.id}>\n              <Book book={book} updateBook={updateBook}/>\n            </li>\n            )\n          })\n          ) : (\n            <h1 className='no-results'>No Results</h1>\n          )}\n        </ol>\n      </div>\n    </div>\n  )\n}\n\nSearch.propTypes = {\n  updateSearch: PropTypes.func\n}\n\nexport default Search","import React from 'react'\nimport { Link, useLocation } from 'react-router-dom';\n\nconst BookDetails = ({updateBook}) => {\n  const location = useLocation();\n  const book = (location.state.data);\n  const title = book.title;\n  const author = book.authors\n  const category = book.categories;\n  const description = book.description;\n  const pageCount = book.pageCount;\n  const publisher = book.publisher;\n  const publishedDate = book.publishedDate;\n  const thumbnail = book.imageLinks ? book.imageLinks.thumbnail : \"\"\n  const shelf = book.shelf;\n\n  const handleChange = (e) => {\n    updateBook(book, e.target.value)\n  }\n\n  return (\n  <div className='book-details-wrapper'>\n    <div className='book'>\n      <div className=\"book-top\">\n        <div\n          className=\"book-cover\"\n          style={{\n            width: 128,\n            height: 193,\n            backgroundImage: `url(${thumbnail})`,\n          }}\n        ></div>\n         <div className=\"book-shelf-changer\">\n          <select\n            defaultValue={book.shelf}\n            onChange={handleChange}\n          >\n            <option value=\"none\">\n              Move to...\n            </option>\n            <option value=\"currentlyReading\">\n              Currently Reading\n            </option>\n            <option value=\"wantToRead\">Want to Read</option>\n            <option value=\"read\">Read</option>\n            <option value=\"none\">None</option>\n          </select>\n        </div>\n      </div>\n    </div>\n      <div>\n        <h2>\n          <strong>Title:</strong> {title}\n        </h2>\n        <p>\n          <strong>Authors:</strong> {author}\n        </p>\n        <p>\n          <strong>Category:</strong> {category}\n        </p>\n        <p>\n          <strong>Published Date:</strong> {publishedDate}\n        </p>\n        <p>\n          <strong>Publisher:</strong> {publisher}\n        </p>\n        <p>\n          <strong>Page Count:</strong> {pageCount}\n        </p>\n        <p>\n          <strong>Shelf:</strong> {shelf}\n        </p>\n        <i className='book-description'>{description}</i>\n      </div>\n      <Link className='details-back-link' to={'/'}>Back</Link>\n      \n  </div>\n  )\n}\n\nexport default BookDetails","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport ListBooks from \"./components/ListBooks\";\nimport Search from \"./components/Search\";\nimport BookDetails from \"./components/BookDetails\";\n\nconst App = () => {\n  let navigate = useNavigate();\n  const [books, setBooks] = useState([]);\n\n  useEffect(() => {\n    BooksAPI.getAll().then(books => {\n      setBooks(books);\n    })\n  }, []);\n\n  const updateBook =  async (book, shelf) => {\n    book.shelf = shelf;\n    BooksAPI.update(book, shelf).then(() => {\n      setBooks([...books.filter((b) => b.id !== book.id), book]);\n    });\n\n    navigate(\"/\");\n  };\n\n  return (\n  <Routes>\n    <Route \n      exact path=\"/search\"\n      element={\n        <Search books={books} updateBook={updateBook} setBooks={setBooks} />\n      }\n    />\n    <Route \n      exact path=\"/\"\n      element={\n        <ListBooks books={books} updateBook={updateBook} />\n      }\n    />\n    <Route \n      exact path=\"/details/:id/:title\"\n      element={\n        <BookDetails updateBook={updateBook} />\n      }\n    />\n  </Routes>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}